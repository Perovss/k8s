---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ctx.namespace}}
  name: {{app_name_pos}}
spec:
  serviceName: "{{app_name_pos}}"
  replicas: 1
  selector:
    matchLabels:
      app: {{app_name_pos}}
  template:
    metadata:
      namespace: {{ctx.namespace}}
      labels:
        app: {{app_name_pos}}
    spec:
      containers:
      - image: {{postgres_image}}
        name: {{app_name_pos}}
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "{{app_name_pos}}" -h 127.0.0.1 -p {{postgres.postgres_port}}
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5 
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - |
              exec pg_isready -U "{{app_name_pos}}" -h 127.0.0.1 -p {{postgres.postgres_port}}
              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        envFrom:
        - configMapRef:
            name: configmap-{{app_name_pos}}
        ports:
        - containerPort: {{postgres.postgres_port}}
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: {{app_name_pos}}-volume
      volumes:
      - name: {{app_name_pos}}-volume
        {% if enable_persistent %}
        persistentVolumeClaim:
          claimName: {{app_name_pos}}-task-claim
        {% else %}
        emptyDir: {}
        {% endif %}